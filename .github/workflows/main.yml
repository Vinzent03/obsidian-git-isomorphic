
name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    # update the manifest.json with the new version
    - name: Update manifest version
      uses: jossef/action-set-json-field@v1
      with:
        file: manifest.json
        field: version
        value: ${{ github.event.inputs.version }}
    # Commit the manifest.json and update the tag
    - name: Commit manifest
      run: |
        git config --local user.name "GitHub Action"
        git config --local user.email "action@github.com"
        git branch --show-current
        git add -u
        git commit -m "bump version to ${{ github.event.inputs.version }}"
        git tag -fa ${{ github.event.inputs.version }} -m "${{ github.event.inputs.version }}"
    # push the commit
    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        tags: true
        branch: ${{ github.ref }}
    # Set up node
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - run: |
        git clone https://github.com/denolehov/obsidian-git.git
    # Build the plugin
    - name: Build
      id: build
      run: |
        cd obsidian-git
        rm src/simpleGit.ts
        mv ../simpleGit.ts src/simpleGit.ts
        npm install
        npm run buildbrowser --if-present
    # Package the required files into a zip
    - name: Package
      run: |
        mkdir ${{ github.event.repository.name }}
        cp obsidian-git/main.js manifest.json ${{ github.event.repository.name }}
        zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}
    # Create the release on github
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.event.inputs.version }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        draft: false
        prerelease: false
    # Upload the packaged release file
    - name: Upload zip file
      id: upload-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}.zip
        asset_name: ${{ github.event.repository.name }}-${{ github.event.inputs.version }}.zip
        asset_content_type: application/zip
    # Upload the main.js
    - name: Upload main.js
      id: upload-main
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./obsidian-git/main.js
        asset_name: main.js
        asset_content_type: text/javascript
    # Upload the manifest.json
    - name: Upload manifest.json
      id: upload-manifest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./manifest.json
        asset_name: manifest.json
        asset_content_type: application/json
